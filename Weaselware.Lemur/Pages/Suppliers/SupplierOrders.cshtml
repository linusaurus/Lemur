@page
@model SupplierOrdersModel
@{
}


<h5>@Model.SupplierOrders[0].Supplier</h5>
<p>
    <a class="btn btn-secondary btn-sm" asp-page="Create">Create New</a>
</p>

<form asp-page="./Index" method="get" class="form-inline">
    <input type="text" name="SearchString" value="@Model.CurrentFilter" />
    <button type="submit" class="btn btn-secondary btn-sm ml-2">
        <span data-feather="search" aria-hidden="true"></span> Search
    </button>
    <a class="ml-2" asp-page="./SupplierList"> |  Back to full List</a>
</form>
<br />
<div class="table-responsive">
    <table class="table table-striped table-sm p-0">
        <thead>
            <tr>
                <th>
                    OrderID
                </th>
                <th>
                    Date
                </th>
                <th>
                    Purchaser
                </th>
                <th>
                    Job Name
                </th>
                <th>
                  ---
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.SupplierOrders)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.PurchaseOrderID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OrderDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Purchaser)
                </td>
                <td class="justify-content-end">
                    @Html.DisplayFor(modelItem => item.JobName)
                </td>
                <td>
                    <a asp-page="/Orders/OrderDetail" asp-route-OrderID="@item.PurchaseOrderID">View</a> |
                    <a asp-page="/Edit" asp-route-id="@item.PurchaseOrderID">Recieve</a> |
                </td>
            </tr>
            }
        </tbody>
    </table>
</div>
@{
    var prevDisabled = !Model.SupplierOrders.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.SupplierOrders.HasNextPage ? "disabled" : "";
}

<a asp-page="./SupplierOrders"
   asp-route-pageIndex="@(Model.SupplierOrders.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-sm btn-secondary @prevDisabled">
    Previous
</a>
<a asp-page="./SupplierOrders"
   asp-route-pageIndex="@(Model.SupplierOrders.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-sm btn-secondary  @nextDisabled">
    Next

</a>
