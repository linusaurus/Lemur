@page
@model Weaselware.Lemur.Pages.Parts.indexModel
@{
    ViewData["Title"] = "index";
}

<h4>Parts Manager</h4>

<p>
<a class="btn btn-sm btn-secondary" asp-page="Create">Create New</a>
</p>


<form asp-page="./Index" method="get" class="form-inline">
    <input type="text" class="mr-2" name="searchString"  value="@Model.CurrentFilter" />
    <button type="submit" class="btn btn-sm btn-secondary mr-2">
        <span data-feather="search" aria-hidden="true"></span> Search
    </button>
    <a asp-page="./Index"> |  Back to full List</a>
</form>
<br />
<div class="table-responsive">
    <table class="table table-striped table-sm p-0 ">
        <thead>
            <tr>
                <th>
                    <a>@Html.DisplayNameFor(model => model.Parts[0].PartID)</a>
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Parts[0].Description)
                </th>               
                <th>
                    <a>
                        Stock On Hand
                    </a>
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Parts)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.PartID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                
                <td>
                    @Html.DisplayFor(modelItem => item.UnitInStock)
                </td>
                <td>
                    <a asp-page="./PartEdit" asp-route-id="@item.PartID">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@item.PartID">Details</a> |
                    <a asp-page="./Order" asp-route-id="@item.PartID">Add To Order</a>
                    <!-- <a asp-page="./Delete" asp-route-id="@item.PartID">Delete</a>-->
                </td>
            </tr>
            }
        </tbody>

    </table>
</div>

@{
    var prevDisabled = !Model.Parts.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Parts.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-pageIndex="@(Model.Parts.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-sm btn-secondary @prevDisabled">
    Previous
</a>
<a asp-page="./Index"
   asp-route-pageIndex="@(Model.Parts.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-sm btn-secondary @nextDisabled">
    Next

</a>